###
### Simple script to build a zip file of the whole repository
###
#
#script:
## debug  - echo 'Hello World'
#  - export PLUGIN_VERSION=$(cat setup.py | grep 'plugin_version = "*"' | cut -d '"' -f2)
#  - zip -r master.zip * -i '\octoprint_*' 'translations' 'README.md' 'requirements.txt' 'setup.py'
## debug  - ls -al
#
### see "Fix travis automatic build and deploy"
### https://github.com/oliexdev/openScale/pull/121
### https://github.com/oliexdev/openScale/pull/121/files
#before_deploy:
#  - git tag -f travis-build
#  - git remote add gh https://${TRAVIS_REPO_SLUG%/*}:${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
#  - git push -f gh travis-build
#  - git remote remove gh
#
#deploy:
#  name: "V${PLUGIN_VERSION}-draft"
#  #prerelease: true
#  draft: true
#  provider: releases
#  api_key: "${GITHUB_TOKEN}"
#  file: "master.zip"
#  overwrite: true
#  skip_cleanup: true
#  target_commitish: $TRAVIS_COMMIT



name: Build Plugin Release - Action
on: [push]
jobs:
  Build-Release-ZIP-Action:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - run: echo "Read current plugin version..."
      - run: export PLUGIN_VERSION=$(cat setup.py | grep 'plugin_version = "*"' | cut -d '"' -f2)
      - run: echo "Plugin Version  $PLUGIN_VERSION ${PLUGIN_VERSION}"

      - run: echo "Build ZIP"
      - run: zip -r master.zip * -i '\octoprint_*' 'translations' 'README.md' 'requirements.txt' 'setup.py'
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: version
        run: echo "::set-output name=version::$(cat setup.py | grep 'plugin_version = "*"' | cut -d '"' -f2)"
        id: version

      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: true
          prerelease: false
          release_name: V${{ steps.version.outputs.version }}-draft
          tag_name: ${{ steps.version.outputs.version }}-draft
          body_path: RELEASE_TEMPLATE.md

      - name: upload master.zip to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: master.zip
          asset_name: master.zip
          asset_content_type: application/gzip

      - run: echo "üçè This job's status is ${{ job.status }}."